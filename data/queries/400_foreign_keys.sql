CREATE TABLE IF NOT EXISTS foreign_persons ( id bigserial NOT NULL, first_name character varying(255) COLLATE pg_catalog."default", last_name character varying(255) COLLATE pg_catalog."default", CONSTRAINT foreign_persons_pkey PRIMARY KEY (id));

INSERT INTO foreign_persons (first_name) VALUES ('india-all');
INSERT INTO foreign_persons (first_name) VALUES ('testlogin');
INSERT INTO foreign_persons (first_name) VALUES ('INFORMANT-USER');
INSERT INTO foreign_persons (first_name) VALUES ('lims');
INSERT INTO foreign_persons (first_name) VALUES ('SafeVac');
INSERT INTO foreign_persons (first_name) VALUES ('sto-KA');
INSERT INTO foreign_persons (first_name) VALUES ('dto-KADHA');
INSERT INTO foreign_persons (first_name) VALUES ('tbu-KADHA01');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-001');
INSERT INTO foreign_persons (first_name) VALUES ('6');
INSERT INTO foreign_persons (first_name) VALUES ('7');
INSERT INTO foreign_persons (first_name) VALUES ('8');
INSERT INTO foreign_persons (first_name) VALUES ('9');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-002');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-003');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-004');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-005');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-006');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-007');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-008');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-009');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-010');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-011');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-012');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-013');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-014');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-015');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-016');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-017');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-018');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-019');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-020');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-021');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-022');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-023');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-024');
INSERT INTO foreign_persons (first_name) VALUES ('33');
INSERT INTO foreign_persons (first_name) VALUES ('tbu-KADHA02');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA02-001');
INSERT INTO foreign_persons (first_name) VALUES ('DBT Checker');
INSERT INTO foreign_persons (first_name) VALUES ('DBT Maker');
INSERT INTO foreign_persons (first_name) VALUES ('DBT Maker Tribal');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Public', 'Patient');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Private', 'Patient');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Diagnosed', 'Not on Treatment Public');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Diagnosed', 'Not on Treatment Private');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Diagnosed', 'On Treatment Public');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Diagnosed', 'On Treatment Private');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Outcome', 'Assigned Public');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Outcome', 'Assigned Private');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Direct Treatment', 'Private');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('System Identified', 'Duplicate');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('User Confirmed', 'Duplicate');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('User Confirmed', 'Unique');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Vaccination', 'Followup One');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Vaccination', 'Followup Two');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Vaccination', 'Followup Three');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Vaccination', 'Followup Four');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Vaccination', 'Followup Five');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Vaccination', 'Followup Six');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Vaccination', 'Followup Seven');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Vaccination', 'Followup Eight');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Vaccination', 'Followup Nine');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Vaccination', 'Followup Ten');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Vaccination', 'Followup Eleven');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Vaccination', 'Followup Twelve');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Vaccination', 'Followup Thirteen');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('Vaccination', 'Followup Fourteen');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('NS', 'Old Benefit');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('NS', 'New Benefit');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('TS', 'Benefit');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('PSN Benefit', 'Private Patient');
INSERT INTO foreign_persons (first_name) VALUES ('PSN Benefit Informant');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('PSN Benefit', 'Public Patient');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('PSN Notification', 'Enrollment');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('PSN Notification', 'Diagnosed');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('PSN', 'Outcome');
INSERT INTO foreign_persons (first_name) VALUES ('PATIENT_FACING_APP_USER');
INSERT INTO foreign_persons (first_name) VALUES ('phi-KADHA01-025');
INSERT INTO foreign_persons (first_name, last_name) VALUES ('democountrylogin', null);
INSERT INTO foreign_persons (first_name, last_name) VALUES ('On', 'Treatment');
INSERT INTO foreign_persons (first_name) VALUES ('dispensation-client');

CREATE TABLE IF NOT EXISTS foreign_sso_users ( id bigserial NOT NULL, user_name character varying(255) COLLATE pg_catalog."default", CONSTRAINT foreign_sso_users_pkey PRIMARY KEY (id));

INSERT INTO foreign_sso_users (user_name) VALUES ('india-all');
INSERT INTO foreign_sso_users (user_name) VALUES ('testlogin');
INSERT INTO foreign_sso_users (user_name) VALUES ('informant-user');
INSERT INTO foreign_sso_users (user_name) VALUES ('lims');
INSERT INTO foreign_sso_users (user_name) VALUES ('safevac');
INSERT INTO foreign_sso_users (user_name) VALUES ('sto-ka');
INSERT INTO foreign_sso_users (user_name) VALUES ('dto-kadha');
INSERT INTO foreign_sso_users (user_name) VALUES ('tbu-kadha01');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-001');
INSERT INTO foreign_sso_users (user_name) VALUES ('6');
INSERT INTO foreign_sso_users (user_name) VALUES ('7');
INSERT INTO foreign_sso_users (user_name) VALUES ('8');
INSERT INTO foreign_sso_users (user_name) VALUES ('9');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-002');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-003');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-004');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-005');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-006');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-007');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-008');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-009');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-010');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-011');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-012');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-013');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-014');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-015');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-016');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-017');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-018');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-019');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-020');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-021');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-022');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-023');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-024');
INSERT INTO foreign_sso_users (user_name) VALUES ('33');
INSERT INTO foreign_sso_users (user_name) VALUES ('tbu-kadha02');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha02-001');
INSERT INTO foreign_sso_users (user_name) VALUES ('9999999947');
INSERT INTO foreign_sso_users (user_name) VALUES ('9999999938');
INSERT INTO foreign_sso_users (user_name) VALUES ('9999999934');
INSERT INTO foreign_sso_users (user_name) VALUES ('9999999918');
INSERT INTO foreign_sso_users (user_name) VALUES ('41');
INSERT INTO foreign_sso_users (user_name) VALUES ('patient_facing_app_user');
INSERT INTO foreign_sso_users (user_name) VALUES ('phi-kadha01-025');
INSERT INTO foreign_sso_users (user_name) VALUES ('democountrylogin');
INSERT INTO foreign_sso_users (user_name) VALUES ('10');
INSERT INTO foreign_sso_users (user_name) VALUES ('dispensation-client');

CREATE TABLE IF NOT EXISTS foreign_user_access ( id bigserial NOT NULL, user_name character varying(255) COLLATE pg_catalog."default", CONSTRAINT foreign_user_access_pkey PRIMARY KEY (id));

INSERT INTO foreign_user_access (user_name) VALUES ('india-all');
INSERT INTO foreign_user_access (user_name) VALUES ('testlogin');
INSERT INTO foreign_user_access (user_name) VALUES ('INFORMANT-USER');
INSERT INTO foreign_user_access (user_name) VALUES ('lims');
INSERT INTO foreign_user_access (user_name) VALUES ('SafeVac');
INSERT INTO foreign_user_access (user_name) VALUES ('sto-KA');
INSERT INTO foreign_user_access (user_name) VALUES ('dto-KADHA');
INSERT INTO foreign_user_access (user_name) VALUES ('tbu-KADHA01');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-001');
INSERT INTO foreign_user_access (user_name) VALUES ('6');
INSERT INTO foreign_user_access (user_name) VALUES ('7');
INSERT INTO foreign_user_access (user_name) VALUES ('8');
INSERT INTO foreign_user_access (user_name) VALUES ('9');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-002');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-003');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-004');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-005');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-006');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-007');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-008');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-009');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-010');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-011');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-012');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-013');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-014');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-015');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-016');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-017');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-018');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-019');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-020');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-021');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-022');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-023');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-024');
INSERT INTO foreign_user_access (user_name) VALUES ('33');
INSERT INTO foreign_user_access (user_name) VALUES ('tbu-KADHA02');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA02-001');
INSERT INTO foreign_user_access (user_name) VALUES ('9999999947');
INSERT INTO foreign_user_access (user_name) VALUES ('9999999938');
INSERT INTO foreign_user_access (user_name) VALUES ('9999999934');
INSERT INTO foreign_user_access (user_name) VALUES ('9999999918');
INSERT INTO foreign_user_access (user_name) VALUES ('patient_facing_app_user');
INSERT INTO foreign_user_access (user_name) VALUES ('phi-KADHA01-025');
INSERT INTO foreign_user_access (user_name) VALUES ('democountrylogin');
INSERT INTO foreign_user_access (user_name) VALUES ('dispensation-client');

CREATE TABLE IF NOT EXISTS foreign_beneficiary ( id bigserial NOT NULL, name character varying(255) COLLATE pg_catalog."default", CONSTRAINT foreign_beneficiary_pkey PRIMARY KEY (id));

INSERT INTO foreign_beneficiary (name) VALUES ('Public Patient');
INSERT INTO foreign_beneficiary (name) VALUES ('Private Patient');
INSERT INTO foreign_beneficiary (name) VALUES ('Diagnosed Not on Treatment Public');
INSERT INTO foreign_beneficiary (name) VALUES ('Diagnosed Not on Treatment Private');
INSERT INTO foreign_beneficiary (name) VALUES ('Diagnosed On Treatment Public');
INSERT INTO foreign_beneficiary (name) VALUES ('Diagnosed On Treatment Private');
INSERT INTO foreign_beneficiary (name) VALUES ('Outcome Assigned Public');
INSERT INTO foreign_beneficiary (name) VALUES ('Outcome Assigned Private');
INSERT INTO foreign_beneficiary (name) VALUES ('Direct Treatment Private');
INSERT INTO foreign_beneficiary (name) VALUES ('System Identified Duplicate');
INSERT INTO foreign_beneficiary (name) VALUES ('User Confirmed Duplicate');
INSERT INTO foreign_beneficiary (name) VALUES ('User Confirmed Unique');
INSERT INTO foreign_beneficiary (name) VALUES ('Vaccination Followup One');
INSERT INTO foreign_beneficiary (name) VALUES ('Vaccination Followup Two');
INSERT INTO foreign_beneficiary (name) VALUES ('Vaccination Followup Three');
INSERT INTO foreign_beneficiary (name) VALUES ('Vaccination Followup Four');
INSERT INTO foreign_beneficiary (name) VALUES ('Vaccination Followup Five');
INSERT INTO foreign_beneficiary (name) VALUES ('Vaccination Followup Six');
INSERT INTO foreign_beneficiary (name) VALUES ('Vaccination Followup Seven');
INSERT INTO foreign_beneficiary (name) VALUES ('Vaccination Followup Eight');
INSERT INTO foreign_beneficiary (name) VALUES ('Vaccination Followup Nine');
INSERT INTO foreign_beneficiary (name) VALUES ('Vaccination Followup Ten');
INSERT INTO foreign_beneficiary (name) VALUES ('Vaccination Followup Eleven');
INSERT INTO foreign_beneficiary (name) VALUES ('Vaccination Followup Twelve');
INSERT INTO foreign_beneficiary (name) VALUES ('Vaccination Followup Thirteen');
INSERT INTO foreign_beneficiary (name) VALUES ('Vaccination Followup Fourteen');
INSERT INTO foreign_beneficiary (name) VALUES ('NS Old Benefit');
INSERT INTO foreign_beneficiary (name) VALUES ('NS New Benefit');
INSERT INTO foreign_beneficiary (name) VALUES ('TS Benefit');
INSERT INTO foreign_beneficiary (name) VALUES ('single clinic');
INSERT INTO foreign_beneficiary (name) VALUES ('PSN Benefit Private Patient');
INSERT INTO foreign_beneficiary (name) VALUES ('PSN Benefit Informant');
INSERT INTO foreign_beneficiary (name) VALUES ('PSN Benefit Public Patient');

CREATE TABLE IF NOT EXISTS foreign_hierarchy ( id bigserial NOT NULL, name character varying(255) COLLATE pg_catalog."default", level smallint, CONSTRAINT foreign_hierarchy_pkey PRIMARY KEY (id));

INSERT INTO foreign_hierarchy (name, level) VALUES ('India', 1);
INSERT INTO foreign_hierarchy (name, level) VALUES ('Karnataka', 2);
INSERT INTO foreign_hierarchy (name, level) VALUES ('Dharwad', 3);
INSERT INTO foreign_hierarchy (name, level) VALUES ('tu', 4);
INSERT INTO foreign_hierarchy (name, level) VALUES ('phi', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('single clinic', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('multi clinic', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('private lab', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('private chemist', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('dmc lab', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('truenat lab', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('cbnaat lab', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('xray lab', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('ictc lab', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('cdst lab', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('dm screening lab', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('tobacco clinic', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('anc clinic', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('nutritional centre', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('de addiction centre', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('prison', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('art centre', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('drug store', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('medical college', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('nuhm facility', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('drtb centre', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('nodal drtb', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('irl', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('ngo', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('pediatric facility', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('cghs', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('wellness centre', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('microscopy service lab', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('tuTribal', 4);
INSERT INTO foreign_hierarchy (name, level) VALUES ('tribal phi', 5);
INSERT INTO foreign_hierarchy (name, level) VALUES ('merged phi', 5);

CREATE TABLE IF NOT EXISTS foreign_ins_trigger ( id bigserial NOT NULL, name character varying(255) COLLATE pg_catalog."default", CONSTRAINT foreign_ins_trigger_pkey PRIMARY KEY (id));

INSERT INTO foreign_ins_trigger (name) VALUES ('Username New Facility');
INSERT INTO foreign_ins_trigger (name) VALUES ('Password DBT Maker');
INSERT INTO foreign_ins_trigger (name) VALUES ('OTP DBT maker');
INSERT INTO foreign_ins_trigger (name) VALUES ('Nikshay Username Updated');
INSERT INTO foreign_ins_trigger (name) VALUES ('Nikshay Password Updated');
INSERT INTO foreign_ins_trigger (name) VALUES ('OTP Beneficiary Approval');
INSERT INTO foreign_ins_trigger (name) VALUES ('OTP Approval of Benefits');
INSERT INTO foreign_ins_trigger (name) VALUES ('Patient App Login');
INSERT INTO foreign_ins_trigger (name) VALUES ('Staff Notification');

CREATE TABLE IF NOT EXISTS foreign_ins_template ( id bigserial NOT NULL, content text COLLATE pg_catalog."default", CONSTRAINT foreign_ins_template_pkey PRIMARY KEY (id));

INSERT INTO foreign_ins_template (content) VALUES ('Your Username is %(user). Use the Id and the password you set while registering, to login to Nikshay platform. CTD-MoHFW www.nikshay.in');
INSERT INTO foreign_ins_template (content) VALUES ('Your Username is %(user). Use the Id and the password you set while registering, to login to Nikshay platform.');
INSERT INTO foreign_ins_template (content) VALUES ('Your new Nikshay login password is %(password), please reset your password after login. CTD-MoHFW www.nikshay.in');
INSERT INTO foreign_ins_template (content) VALUES ('Your new Nikshay login password is %(password), please reset your password after login.');
INSERT INTO foreign_ins_template (content) VALUES ('%(otp) is the OTP for - %(user) . Treat this as confidential. Do not share the OTP with anyone for security reasons. CTD -MoHFW www.nikshay.in');
INSERT INTO foreign_ins_template (content) VALUES ('%(prefix)%(otp) is the OTP for - %(user). Treat this as confidential. Do not share the OTP with anyone for security reasons.');
INSERT INTO foreign_ins_template (content) VALUES ('%(prefix)Nikshay Username updated, your new username is %(user).');
INSERT INTO foreign_ins_template (content) VALUES ('%(prefix)Nikshay Password updated, your new password is %(password).');
INSERT INTO foreign_ins_template (content) VALUES ('Dear TB survivor, We congratulate you for successfully defeating TB and overcoming the pain and suffering. Now, you can help other people with TB and be a TB Champion. This effort and commitment by you and other TB Champions will help the country to defeat TB. As a 1st step, we request you to complete the training by clicking on the link. Click %(link) to download. Login using your Nikshay ID : %(id). All the best! CTD-MoHFW www.nikshay.in');
INSERT INTO foreign_ins_template (content) VALUES ('%(otp) is the OTP for logging into the TB Aarogya Saathi mobile application for your Nikshay ID - %(id). Treat this as confidential. Do not share the OTP with anyone for security reasons. pLuVhmuvQoY CTD-MoHFW www.nikshay.in');
INSERT INTO foreign_ins_template (content) VALUES ('%(otp) is the OTP for - Logging into TB Aarogya Sathi App. Treat this as confidential. Do not share the OTP with anyone for security reasons. %(user)');
INSERT INTO foreign_ins_template (content) VALUES ('Dear %(name) Detect TB in your close contacts by timely check -up if they develop TB symptoms like cough, fever, weight loss and loss of appetite. If TB is ruled out, they can be given TB preventive treatment to stay protected . Please consult your doctor or treatment supporter immediately for TB preventive treatment for your close contacts. For more info, call 1800-11-6666. CTD-MoHFW www.nikshay.in');

CREATE TABLE IF NOT EXISTS foreign_ins_vendor ( id bigserial NOT NULL, gateway character varying(255) COLLATE pg_catalog."default", CONSTRAINT foreign_ins_vendor_pkey PRIMARY KEY (id));

INSERT INTO foreign_ins_vendor (gateway) VALUES ('PLIVO');

CREATE TABLE IF NOT EXISTS foreign_ins_language ( id bigserial NOT NULL, name character varying(255) COLLATE pg_catalog."default", CONSTRAINT foreign_ins_language_pkey PRIMARY KEY (id));

INSERT INTO foreign_ins_language (name) VALUES ('ENGLISH');

CREATE TABLE IF NOT EXISTS foreign_ins_type ( id bigserial NOT NULL, name character varying(255) COLLATE pg_catalog."default", CONSTRAINT foreign_ins_type_pkey PRIMARY KEY (id));

INSERT INTO foreign_ins_type (name) VALUES ('SMS');

CREATE TABLE IF NOT EXISTS foreign_episode ( id bigserial NOT NULL, first_name character varying(255) COLLATE pg_catalog."default", last_name character varying(255) COLLATE pg_catalog."default", CONSTRAINT foreign_episode_pkey PRIMARY KEY (id));

INSERT INTO foreign_episode (first_name, last_name) VALUES ('Public', 'Patient');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Private', 'Patient');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Diagnosed', 'Not on Treatment Public');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Diagnosed', 'Not on Treatment Private');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Diagnosed', 'On Treatment Public');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Diagnosed', 'On Treatment Private');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Outcome', 'Assigned Public');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Outcome', 'Assigned Private');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Direct Treatment', 'Private');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('System Identified', 'Duplicate');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('User Confirmed', 'Duplicate');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('User Confirmed', 'Unique');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Vaccination', 'Followup One');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Vaccination', 'Followup Two');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Vaccination', 'Followup Three');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Vaccination', 'Followup Four');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Vaccination', 'Followup Five');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Vaccination', 'Followup Six');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Vaccination', 'Followup Seven');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Vaccination', 'Followup Eight');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Vaccination', 'Followup Nine');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Vaccination', 'Followup Ten');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Vaccination', 'Followup Eleven');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Vaccination', 'Followup Twelve');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Vaccination', 'Followup Thirteen');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('Vaccination', 'Followup Fourteen');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('NS', 'Old Benefit');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('NS', 'New Benefit');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('TS', 'Benefit');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('PSN Benefit', 'Private Patient');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('PSN Benefit', 'Public Patient');
INSERT INTO foreign_episode (first_name, last_name) VALUES ('On', 'Treatment');

CREATE TABLE IF NOT EXISTS foreign_diagnostics_test_type ( id bigserial NOT NULL, name character varying(255) COLLATE pg_catalog."default", CONSTRAINT foreign_diagnostics_test_type_pkey PRIMARY KEY (id));

INSERT INTO foreign_diagnostics_test_type (name) VALUES ('DELETED');
INSERT INTO foreign_diagnostics_test_type (name) VALUES ('Sample Collection Pending');
INSERT INTO foreign_diagnostics_test_type (name) VALUES ('Test Pending');
INSERT INTO foreign_diagnostics_test_type (name) VALUES ('Results Available');
INSERT INTO foreign_diagnostics_test_type (name) VALUES ('Sample Collected');
INSERT INTO foreign_diagnostics_test_type (name) VALUES ('Sample in Transit');

CREATE TABLE IF NOT EXISTS foreign_diagnostics_requests ( id bigserial NOT NULL, first_name character varying(255) COLLATE pg_catalog."default", last_name character varying(255) COLLATE pg_catalog."default", number bigint, CONSTRAINT foreign_diagnostics_requests_pkey PRIMARY KEY (id));

INSERT INTO foreign_diagnostics_requests (first_name, last_name, number) VALUES ('Diagnosed', 'Not on Treatment Public', 1);
INSERT INTO foreign_diagnostics_requests (first_name, last_name, number) VALUES ('Diagnosed', 'Not on Treatment Private', 1);
INSERT INTO foreign_diagnostics_requests (first_name, last_name, number) VALUES ('Diagnosed', 'On Treatment Public', 1);
INSERT INTO foreign_diagnostics_requests (first_name, last_name, number) VALUES ('Diagnosed', 'On Treatment Private', 1);
INSERT INTO foreign_diagnostics_requests (first_name, last_name, number) VALUES ('Outcome', 'Assigned Public', 1);
INSERT INTO foreign_diagnostics_requests (first_name, last_name, number) VALUES ('Outcome', 'Assigned Private', 1);
INSERT INTO foreign_diagnostics_requests (first_name, last_name, number) VALUES ('System Identified', 'Duplicate', 1);
INSERT INTO foreign_diagnostics_requests (first_name, last_name, number) VALUES ('User Confirmed', 'Duplicate', 1);
INSERT INTO foreign_diagnostics_requests (first_name, last_name, number) VALUES ('User Confirmed', 'Unique', 1);
INSERT INTO foreign_diagnostics_requests (first_name, last_name, number) VALUES ('NS', 'Old Benefit', 1);
INSERT INTO foreign_diagnostics_requests (first_name, last_name, number) VALUES ('NS', 'New Benefit', 1);
INSERT INTO foreign_diagnostics_requests (first_name, last_name, number) VALUES ('TS', 'Benefit', 1);
INSERT INTO foreign_diagnostics_requests (first_name, last_name, number) VALUES ('PSN Benefit', 'Private Patient', 1);
INSERT INTO foreign_diagnostics_requests (first_name, last_name, number) VALUES ('PSN Benefit', 'Public Patient', 1);

CREATE TABLE IF NOT EXISTS foreign_supported_tab ( id bigserial NOT NULL, name character varying(255) COLLATE pg_catalog."default", CONSTRAINT foreign_supported_tab_pkey PRIMARY KEY (id));

INSERT INTO foreign_supported_tab (name) VALUES ('VaccinationFollowUp');
INSERT INTO foreign_supported_tab (name) VALUES ('Tests');
INSERT INTO foreign_supported_tab (name) VALUES ('Basic Details');
INSERT INTO foreign_supported_tab (name) VALUES ('Comorbidity');
INSERT INTO foreign_supported_tab (name) VALUES ('Health Facilities');
INSERT INTO foreign_supported_tab (name) VALUES ('Treatment Details');
INSERT INTO foreign_supported_tab (name) VALUES ('Outcomes');
INSERT INTO foreign_supported_tab (name) VALUES ('DBT');
INSERT INTO foreign_supported_tab (name) VALUES ('Dispensation');
INSERT INTO foreign_supported_tab (name) VALUES ('Contact Tracing');

CREATE TABLE IF NOT EXISTS foreign_dispensation_transaction_type ( id bigserial NOT NULL, name character varying(255) COLLATE pg_catalog."default", CONSTRAINT foreign_dispensation_transaction_type_pkey PRIMARY KEY (id));

INSERT INTO foreign_dispensation_transaction_type (id, name) VALUES (0, 'ISSUED');
INSERT INTO foreign_dispensation_transaction_type (id, name) VALUES (1, 'RETURNED');
INSERT INTO foreign_dispensation_transaction_type (id, name) VALUES (2, 'CREDIT');
INSERT INTO foreign_dispensation_transaction_type (id, name) VALUES (3, 'DEBIT');
INSERT INTO foreign_dispensation_transaction_type (id, name) VALUES (4, 'UPDATE');

CREATE TABLE IF NOT EXISTS foreign_dispensation_comment_type ( id bigserial NOT NULL, name character varying(255) COLLATE pg_catalog."default", CONSTRAINT foreign_dispensation_comment_type_pkey PRIMARY KEY (id));

INSERT INTO foreign_dispensation_comment_type (id, name) VALUES (0, 'REASON_FOR_RETURN');
INSERT INTO foreign_dispensation_comment_type (id, name) VALUES (1, 'REASON_FOR_CREDIT');
INSERT INTO foreign_dispensation_comment_type (id, name) VALUES (2, 'REASON_FOR_DEBIT');
INSERT INTO foreign_dispensation_comment_type (id, name) VALUES (3, 'REASON_FOR_ADD');
INSERT INTO foreign_dispensation_comment_type (id, name) VALUES (4, 'REASON_FOR_UPDATE');

CREATE TABLE IF NOT EXISTS foreign_dispensation_transaction_id_type ( id bigserial NOT NULL, name character varying(255) COLLATE pg_catalog."default", CONSTRAINT foreign_dispensation_transaction_id_type_pkey PRIMARY KEY (id));

INSERT INTO foreign_dispensation_transaction_id_type (id, name) VALUES (0, 'INTERNAL');
INSERT INTO foreign_dispensation_transaction_id_type (id, name) VALUES (1, 'EXTERNAL');

CREATE TABLE IF NOT EXISTS foreign_data_gateway_client ( id bigserial NOT NULL, name character varying(255) COLLATE pg_catalog."default", CONSTRAINT foreign_data_gateway_client_pkey PRIMARY KEY (id));

INSERT INTO foreign_data_gateway_client (name) VALUES ('internal_client');
INSERT INTO foreign_data_gateway_client (name) VALUES ('lims');
INSERT INTO foreign_data_gateway_client (name) VALUES ('abdm-client');
INSERT INTO foreign_data_gateway_client (name) VALUES ('safevac');
INSERT INTO foreign_data_gateway_client (name) VALUES ('dispensation-client');